---
import ProfileLayout  from    "@/layouts/Layout.astro"
import Sidebar from "@/components/ui/menus/Sidebar.astro";
import ProfileView from "@/components/section/profile/ProfileView"; // ðŸ‘ˆ importas el React
import { supabase } from "@/lib/supabase";

const { params, cookies, redirect } = Astro;

const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");

if (!accessToken || !refreshToken) {
  return redirect("/signin");
}

const { data: { session } } = await supabase.auth.getSession();
const currentUser = session?.user;

const { data: profile, error } = await supabase
  .from("profiles")
  .select("id, nombre, apellidos, avatar_url, bio")
  .eq("id", params.id)
  .single();

// query inicial de followers/following
let followers: any[] | undefined = [];
let following: any[] | undefined = [];
let isFollowing = false;

if (profile) {
  const { data: f1 } = await supabase
    .from("follows")
    .select("id, follower_id, profiles!follows_follower_id_fkey(id,nombre,apellidos,avatar_url)")
    .eq("followed_id", profile.id);

  const { data: f2 } = await supabase
    .from("follows")
    .select("id, followed_id, profiles!follows_followed_id_fkey(id,nombre,apellidos,avatar_url)")
    .eq("follower_id", profile.id);

  followers = f1 ?? [];
  following = f2 ?? [];

  if (currentUser) {
    const { data: existingFollow } = await supabase
      .from("follows")
      .select("id")
      .eq("follower_id", currentUser.id)
      .eq("followed_id", profile.id)
      .maybeSingle();

    isFollowing = !!existingFollow;
  }
}
---

<ProfileLayout user={currentUser} displayName={profile?.nombre} avatar={profile?.avatar_url}>
  {profile && (
    <ProfileView client:load profile={profile} currentUser={currentUser} initialFollowers={followers} initialFollowing={following} isFollowing={isFollowing} />
  )}
</ProfileLayout>
